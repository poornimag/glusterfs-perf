---
# Create workdir for untar
- file:
    path: "{{ glusterfs_perf_mountpoint }}/untar"
    state: directory
  delegate_to: "{{ glusterfs_perf_client | default(glusterfs_perf_server) }}"
  run_once: true

# Create a directory to store the results
- name: Create a temporary directory to store results
  file:
     state: directory
     path: "{{ glusterfs_perf_resdir }}/untar"
  delegate_to: "{{ glusterfs_perf_client | default(glusterfs_perf_server) }}"
  run_once: true

# Download the tar of latest kernel
- name: Download the tar of 5.0 kernel
  get_url:
    url: https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.0.tar.xz
    dest: "{{ glusterfs_perf_mountpoint }}/untar/"
  delegate_to: "{{ glusterfs_perf_client | default(glusterfs_perf_server) }}"
  run_once: true

# Run the untar
- name: Untar the kernel
  shell: tar -xf {{ glusterfs_perf_mountpoint }}/untar/linux-5.0.tar.xz -C {{ glusterfs_perf_mountpoint }}/untar/ > {{ glusterfs_perf_resdir }}/untar/untar.results.out 2>&1
  delegate_to: "{{ glusterfs_perf_client | default(glusterfs_perf_server) }}"
  register: untar_output

# Format the untar time in json format
- name: Format the untar time in json format
  shell: echo '{"time"{{ ":" }}{{ untar_output.delta }}}' > {{ glusterfs_perf_resdir }}/untar/untar.json
  delegate_to: "{{ glusterfs_perf_client | default(glusterfs_perf_server) }}"

# Clean the untar directory
- name: Clean the untar directory
  shell: time rm -rf {{ glusterfs_perf_mountpoint }}/untar/ > {{ glusterfs_perf_resdir }}/untar/untar-rm-rf.results.out 2>&1
  delegate_to: "{{ glusterfs_perf_client | default(glusterfs_perf_server) }}"
  register: untar_rm_output

# Format the untar cleanup time in json format
- name: Format the cleanup time in json format
  shell: echo '{"time"{{ ":" }}{{ untar_rm_output.delta }}}' > {{ glusterfs_perf_resdir }}/untar/untar-rm-rf.json
  delegate_to: "{{ glusterfs_perf_client | default(glusterfs_perf_server) }}"
